% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brnb.R
\name{brnb}
\alias{brnb}
\title{Bias reduction for negative binomial regression model}
\usage{
brnb(
  formula,
  data,
  subset,
  weights = NULL,
  offset = NULL,
  link = "log",
  start = NULL,
  etastart = NULL,
  mustart = NULL,
  control = list(...),
  na.action,
  model = TRUE,
  x = FALSE,
  y = TRUE,
  contrasts = NULL,
  intercept = TRUE,
  singular.ok = TRUE,
  ...
)
}
\arguments{
\item{formula}{an object of class \code{"\link[stats]{formula}"} (or one that
    can be coerced to that class): a symbolic description of the
    model to be fitted.  The details of model specification are given
    under \sQuote{Details}.}

\item{data}{an optional data frame, list or environment (or object
    coercible by \code{\link{as.data.frame}} to a data frame) containing
    the variables in the model.  If not found in \code{data}, the
    variables are taken from \code{environment(formula)},
    typically the environment from which \code{glm} is called.}

\item{subset}{an optional vector specifying a subset of observations
    to be used in the fitting process.}

\item{weights}{an optional vector of \sQuote{prior weights} to be used
    in the fitting process.  Should be \code{NULL} or a numeric vector.}

\item{offset}{this can be used to specify an \emph{a priori} known
    component to be included in the linear predictor during fitting.
    This should be \code{NULL} or a numeric vector of length equal to
    the number of cases.  One or more \code{\link[stats]{offset}} terms can be
    included in the formula instead or as well, and if more than one is
    specified their sum is used.  See \code{\link[stats]{model.offset}}.}

\item{link}{The link function.  Currently must be one of \code{log}, \code{sqrt}
or \code{identity}.}

\item{start}{starting values for the parameters in the linear predictor.}

\item{etastart}{starting values for the linear predictor.}

\item{mustart}{starting values for the vector of means.}

\item{control}{a list of parameters for controlling the fitting
process. See \code{\link{brglmControl}} for details.}

\item{na.action}{a function which indicates what should happen
    when the data contain \code{NA}s.  The default is set by
    the \code{na.action} setting of \code{\link{options}}, and is
    \code{\link[stats]{na.fail}} if that is unset.  The \sQuote{factory-fresh}
    default is \code{\link[stats]{na.omit}}.  Another possible value is
    \code{NULL}, no action.  Value \code{\link[stats]{na.exclude}} can be useful.}

\item{model}{a logical value indicating whether \emph{model frame}
    should be included as a component of the returned value.}

\item{x}{For \code{glm}:
    logical values indicating whether the response vector and model
    matrix used in the fitting process should be returned as components
    of the returned value.

    For \code{glm.fit}: \code{x} is a design matrix of dimension
    \code{n * p}, and \code{y} is a vector of observations of length
    \code{n}.
  }

\item{y}{For \code{glm}:
    logical values indicating whether the response vector and model
    matrix used in the fitting process should be returned as components
    of the returned value.

    For \code{glm.fit}: \code{x} is a design matrix of dimension
    \code{n * p}, and \code{y} is a vector of observations of length
    \code{n}.
  }

\item{contrasts}{an optional list. See the \code{contrasts.arg}
    of \code{model.matrix.default}.}

\item{intercept}{logical. Should an intercept be included in the
    \emph{null} model?}

\item{singular.ok}{logical; if \code{FALSE} a singular fit is an
    error.}

\item{...}{
    For \code{glm}: arguments to be used to form the default
    \code{control} argument if it is not supplied directly.

    For \code{weights}: further arguments passed to or from other methods.
  }

\item{init_dispersion}{optional initial value for the dispersion parameter.  If omitted a maximum
likelihood estimator after an initial fit using a Poisson GLM is used.}
}
\value{
A fitted model object of class \code{brnb} inheriting from \code{negbin} and \code{brglmFit}.
  The object is like the output of \code{brglmFit} but contains
four additional components, namely \code{theta} for the ML estimate of
dispersion parameter as in \code{glm.nb}, \code{vcov.mean} for
the estimated variance covariance matrix of the regression coefficients while \code{vcov.dispersion}
for the estimated variance of the dispersion parameter in a chosen parameterization (using the expected information)
and  \code{twologlik} for  twice the log-likelihood function.
}
\description{
\code{brnb} is a function that fits
negative regression model using implicit and explicit bias
reduction methods. Reference needed.
}
\details{
Thanks to  the orthogonality between coefficients and dispersion parameter,
the alternate  quasi Fisher scoring iteration is used. A detailed description of the
procedure is given in the iteration vignette (see,
\code{vignette("iteration", "brglm2")} or Kosmidis et al, 2020).
(The number of alternations and the number of iterations when estimating
parameters are controlled by the \code{maxit} argument of  \code{brglmControl}.)

The type of score adjustment to be used is specified through the
\code{type} argument (see \code{\link{brglmControl}} for details).
The available options are:
\itemize{
\item \code{type = "AS_mixed"}: the mixed bias-reducing score adjustments in
Kosmidis et al (2019) that result in mean bias reduction for the
regression parameters and median bias reduction for the dispersion
parameter, if any; default.
\item \code{type = "AS_mean"}: the mean bias-reducing score adjustments
in Firth, 1993 and Kosmidis & Firth, 2009.
\item \code{type = "AS_median"}: the median-bias reducing score
adjustments in Kenne Pagui et al. (2017)
\item \code{type = "MPL_Jeffreys"}: maximum penalized likelihood
with powers of the Jeffreys prior as penalty.
\item \code{type = "ML"}: maximum likelihood
\item \code{type = "correction"}: asymptotic bias correction, as in
Cordeiro & McCullagh (1991).
}

The choice of the parameterization for the dispersion is controlled by
the  \code{transformation} argument (see \code{\link{brglmControl}} for details).
The default is \code{identity} but using option  \code{inverse} produces
the results as in \code{glm.nb}.
}
\examples{
## example in Saha, K., & Paul, S. (2005). Bias-corrected maximum
likelihood estimator of the negative binomial dispersion parameter.
Biometrics, 61, 179--185.

## Number of revertant colonies of salmonella
freq <- c(15, 16, 16, 27, 33, 20,
          21, 18, 26, 41, 38, 27,
          29, 21, 33, 60, 41, 42)
dose <- rep(c(0, 10, 33, 100, 333, 1000), 3)
observation <- rep(1:3, each = 6)
salmonella <- data.frame(freq, dose, observation)

## Maximum likelihood fit with glm.nb of MASS
fitmle_glmnb <- MASS::glm.nb(freq~dose+log(dose+10))

## Maximum likelihood fit with brnb
fitmle.brnb <- brnb(freq ~ dose + log(dose+10), link = "log",
                    transformation ="inverse", type = "ML")

## Mean bias-reduced fit:
fitBR_mean<- brnb(freq~dose+log(dose+10),link="log",
transformation ="inverse",type = "AS_mean")
# Median bias-reduced fit:
fitBR_median<- brnb(freq~dose+log(dose+10),link="log",
transformation ="inverse",type = "AS_median")
# Mixed bias-reduced fit:
fitBR_mixed<- brnb(freq~dose+log(dose+10),link="log",
transformation ="inverse",type = "AS_mixed")
 # Mean bias-corrected fit:
fitBC_mean<- brnb(freq~dose+log(dose+10),link="log",
transformation ="inverse",type = "correction")
 Modified penalized likelihood with Jeffreys fit:
fitmplJ<- brnb(freq~dose+log(dose+10),link="log",
transformation ="inverse",type = "MPL_Jeffreys")
# summary of methods
res=round(cbind(coef(fitmle.brnb,"full"),sqrt(diag(vcov(fitmle.brnb,"full"))),
coef(fitBC_mean,"full"),sqrt(diag(vcov(fitBC_mean,"full"))),
coef(fitBR_mean,"full"),sqrt(diag(vcov(fitBR_mean,"full"))),
coef(fitBR_median,"full"),sqrt(diag(vcov(fitBR_median,"full"))),
coef(fitBR_mixed,"full"),sqrt(diag(vcov(fitBR_mixed,"full"))),
coef(fitmplJ,"full"),sqrt(diag(vcov(fitmplJ,"full")))),3)
colnames(res)<-c("mle","semle","bc_mean","sebc_mean",
"br_mean","sebr_mean","br_median","sebr_median","mixed","semixed","mplJ","semplJ")
res

# test with glm.nb
# The parameter estimates are numerically the same for glm.nb and brnb
all.equal(as.vector(c(coef(fitmle.glmnb),fitmle.glmnb$theta)),
as.vector(coef(fitmle.brnb,"full")),tolerance = 1e-08)

# check for invariance property of ML and median BR
fitmle.brnb2<- brnb(freq~dose+log(dose+10),link="log",
transformation ="identity",type = "ML")
fitBR_median2<- brnb(freq~dose+log(dose+10),link="log",
transformation ="identity",type = "AS_median")
# ML
all.equal(fitmle.brnb2$dispersion,1/fitmle.brnb$dispersion,tolerance = 1e-05)

# median BR
all.equal(fitBR_median2$dispersion,1/fitBR_median$dispersion,tolerance = 1e-05)

## check for prior weights
duptimes <- c(2,1,3,5,rep(1,14))
idx <- rep(1:nrow(salmonella), duptimes)
dupsalmonella <- salmonella[idx,]

## fit with equal weights
fitML.ew <- brnb(freq~dose+log(dose+10),link="log",transformation ="identity",
type = "ML",data=dupsalmonella)
fitBR_mean.ew <- brnb(freq~dose+log(dose+10),link="log",transformation ="identity",
type = "AS_mean",data=dupsalmonella)
fitBR_median.ew <- brnb(freq~dose+log(dose+10),link="log",transformation ="identity",
type = "AS_median",data=dupsalmonella)
fitBR_mixed.ew <- brnb(freq~dose+log(dose+10),link="log",transformation ="identity",
type = "AS_mixed",data=dupsalmonella)
fitBC_mean.ew<- brnb(freq~dose+log(dose+10),link="log",transformation ="identity",
type = "correction",data=dupsalmonella)
 fitmplJ.ew<- brnb(freq~dose+log(dose+10),link="log",transformation ="identity",
type = "MPL_Jeffreys",data=dupsalmonella)

## fit using weights
fitML.w <- brnb(freq~dose+log(dose+10),link="log",transformation ="identity",
type = "ML",data=salmonella,weights = duptimes)
fitBR_mean.w <- brnb(freq~dose+log(dose+10),link="log",transformation ="identity",
type = "AS_mean",data=salmonella,weights = duptimes)
fitBR_median.w <- brnb(freq~dose+log(dose+10),link="log",transformation ="identity",
type = "AS_median",data=salmonella,weights = duptimes)
fitBR_mixed.w <- brnb(freq~dose+log(dose+10),link="log",transformation ="identity",
type = "AS_mixed",data=salmonella,weights = duptimes)
fitBC_mean.w<- brnb(freq~dose+log(dose+10),link="log",transformation ="identity",
type = "correction",data=salmonella,weights = duptimes)
fitmplJ.w <- brnb(freq~dose+log(dose+10),link="log",transformation ="identity",
type = "MPL_Jeffreys",data=salmonella,weights = duptimes)

## all numerical results are the same
all.equal(coef(fitML.ew,"full"), coef(fitML.w,"full"),tolerance = 1e-10)
all.equal(coef(fitBR_mean.ew,"full"), coef(fitBR_mean.w,"full"),tolerance = 1e-10)
all.equal(coef(fitBR_median.ew,"full"), coef(fitBR_median.w,"full"),tolerance = 1e-10)
all.equal(coef(fitBR_mixed.ew,"full"), coef(fitBR_mixed.w,"full"),tolerance = 1e-10)
all.equal(coef(fitBC_mean.ew,"full"), coef(fitBC_mean.w,"full"),tolerance = 1e-10)
all.equal(coef(fitmplJ.ew,"full"), coef(fitmplJ.w,"full"),tolerance = 1e-10)
}
\references{
Cordeiro GM & McCullagh, P (1991). Bias correction in generalized
linear models. *Journal of the Royal Statistical Society. Series B(Methodological)*,
 **53**, 629-643.

Firth D (1993). Bias reduction of maximum likelihood estimates,
Biometrika. **80**, 27-38.

Kenne Pagui EC, Salvan A, and Sartori N (2017). Median bias
reduction of maximum likelihood estimates. *Biometrika*, **104**,
923--938

Kosmidis I, Kenne Pagui EC, Sartori N (2020). Mean and median bias
reduction in generalized linear models. *Statistics and Computing*, **30** 43--59.

Kosmidis I and Firth D (2009). Bias reduction in exponential family
nonlinear models. *Biometrika*, **96**, 793-804.
}
